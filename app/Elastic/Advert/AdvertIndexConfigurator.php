<?php

namespace App\Elastic\Advert;

use ScoutElastic\IndexConfigurator;
use ScoutElastic\Migratable;

class AdvertIndexConfigurator extends IndexConfigurator
{
    use Migratable;

    protected $name = 'adverts';
    /**
     * @var array
     */
    protected $settings = [
        'index' => [
            'refresh_interval' => '30s',
            'analysis' => [
                'analyzer' => [
                    'index_analyzer' => [
                        'type' => 'custom',
                        'tokenizer' => 'standard',
                        'filter' => [
                            'russian_stemmer',
                            'stopwords_filter',
                            'asciifolding',
                            'lowercase',
                            'snowball_filter',
                            'nGram_filter',
                            'index_keyword_word_delimiter',
                        ],
                        'char_filter' => ['html_strip'],
                        'token_chars' => ['letter', 'digit'],
                    ],
                    'search_analyzer' => [
                        'type' => 'custom',
                        'tokenizer' => 'whitespace',
                        'filter' => [
                            'russian_stemmer',
                            'stopwords_filter',
                            'asciifolding',
                            'lowercase',
                            'snowball_filter',
                            'index_keyword_word_delimiter',
                        ],
                        'char_filter' => ['html_strip'],
                        'token_chars' => ['letter', 'digit'],
                    ],
                ],
                'filter' => [
                    'preserv_original_asciifolding' => [
                        'type' => 'asciifolding',
                        'preserve_original' => true,
                    ],
                    'keyword_word_delimiter' => [
                        'type' => 'word_delimiter',
                        'preserve_original' => true,
                    ],
                    'index_keyword_word_delimiter' => [
                        'type' => 'word_delimiter',
                        'preserve_original' => true,
                        'split_on_numerics' => false,
                        'stem_english_possessive' => false,
                    ],
                    'autocomplete_keyword_word_delimiter' => [
                        'type' => 'word_delimiter',
                        'preserve_original' => true,
                        'catenate_numbers' => true,
                        'catenate_words' => false,
                        'generate_word_parts' => false,
                        'catenate_all' => false,
                        'split_on_case_change' => false,
                    ],
                    'stopwords_filter' => [
                        'type' => 'stop',
                        'stopwords' => '_russian_',
                    ],
                    'shingle_filter' => [
                        'max_shingle_size' => 4,
                        'min_shingle_size' => 2,
                        'type' => 'shingle',
                        'output_unigrams' => true,
                        'filler_token' => ' ',
                        'output_unigrams_if_no_shingles' => true,
                    ],
                    'nGram_filter' => [
                        'type' => 'edgeNGram',
                        'min_gram' => 3,
                        'max_gram' => 40,
                        'token_chars' => ['letter', 'digit']
                    ],
                    'truncate_filter' => [
                        'type' => 'truncate',
                        'length' => 20,
                    ],
                    'snowball_filter' => [
                        'type' => 'snowball',
                        'language' => 'Russian',
                    ],
                    'russian_stemmer' => [
                        'type' => 'stemmer',
                        'language' => 'russian'
                    ],
                ],
            ],
        ],
    ];

    public function getSettings()
    {
        return parent::getSettings(); // TODO: Change the autogenerated stub
    }
}
